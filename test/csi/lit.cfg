# -*- Python -*-

import os

# Setup config name.
config.name = 'ComprehensiveStaticInstrumentation' + config.name_suffix

# Setup source root.
config.test_source_root = os.path.dirname(__file__)

# Setup default compiler flags used with -fcsi option.
base_cflags = ([config.target_cflags] + config.debug_info_flags)
base_cxxflags = config.cxx_mode_flags + base_cflags

csi_cflags = (["-fcsi"] + base_cflags)
csi_incdir = config.test_source_root + "/toolkit"
unit_cxxflags = (["-I%s" % csi_incdir, "-std=c++11",
                  "-fcsi"] + base_cxxflags)

def build_invocation(compile_flags):
  return " " + " ".join([config.clang] + compile_flags) + " "

config.substitutions.append( ("%clang_csi ",
                              build_invocation(csi_cflags)) )
config.substitutions.append( ("%clangxx_unit",
                              build_invocation(unit_cxxflags)) )

# Default test suffixes.
config.suffixes = ['.c', '.cpp']

# CSI tests are currently supported on Linux x86-64 only.
if config.host_os not in ['Linux'] or config.target_arch != 'x86_64':
  config.unsupported = True
